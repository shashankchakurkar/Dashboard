package model.VO;

import java.math.BigDecimal;

import java.sql.ResultSet;
import java.sql.SQLException;

import oracle.jbo.RowSet;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 18 16:37:24 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LinesVORowImpl extends ViewRowImpl {

    public static final int ENTITY_LINESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BalBeyond60,
        BalOn30,
        BalOn60,
        CurrentBal,
        CustomerName,
        DelqncAmt,
        DelqncAvg,
        DelqncCnt,
        EmpId,
        RowID,
        TotalDue,
        EmpName,
        EmpNameLOV1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int BALBEYOND60 = AttributesEnum.BalBeyond60.index();
    public static final int BALON30 = AttributesEnum.BalOn30.index();
    public static final int BALON60 = AttributesEnum.BalOn60.index();
    public static final int CURRENTBAL = AttributesEnum.CurrentBal.index();
    public static final int CUSTOMERNAME = AttributesEnum.CustomerName.index();
    public static final int DELQNCAMT = AttributesEnum.DelqncAmt.index();
    public static final int DELQNCAVG = AttributesEnum.DelqncAvg.index();
    public static final int DELQNCCNT = AttributesEnum.DelqncCnt.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int TOTALDUE = AttributesEnum.TotalDue.index();
    public static final int EMPNAME = AttributesEnum.EmpName.index();
    public static final int EMPNAMELOV1 = AttributesEnum.EmpNameLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LinesVORowImpl() {
    }

    /**
     * Gets LinesEO entity object.
     * @return the LinesEO
     */
    public EntityImpl getLinesEO() {
        return (EntityImpl) getEntity(ENTITY_LINESEO);
    }

    /**
     * Gets the attribute value for BAL_BEYOND_60 using the alias name BalBeyond60.
     * @return the BAL_BEYOND_60
     */
    public BigDecimal getBalBeyond60() {
        return (BigDecimal) getAttributeInternal(BALBEYOND60);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_BEYOND_60 using the alias name BalBeyond60.
     * @param value value to set the BAL_BEYOND_60
     */
    public void setBalBeyond60(BigDecimal value) {
        setAttributeInternal(BALBEYOND60, value);
    }

    /**
     * Gets the attribute value for BAL_ON_30 using the alias name BalOn30.
     * @return the BAL_ON_30
     */
    public BigDecimal getBalOn30() {
        return (BigDecimal) getAttributeInternal(BALON30);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_ON_30 using the alias name BalOn30.
     * @param value value to set the BAL_ON_30
     */
    public void setBalOn30(BigDecimal value) {
        setAttributeInternal(BALON30, value);
    }

    /**
     * Gets the attribute value for BAL_ON_60 using the alias name BalOn60.
     * @return the BAL_ON_60
     */
    public BigDecimal getBalOn60() {
        return (BigDecimal) getAttributeInternal(BALON60);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_ON_60 using the alias name BalOn60.
     * @param value value to set the BAL_ON_60
     */
    public void setBalOn60(BigDecimal value) {
        setAttributeInternal(BALON60, value);
    }

    /**
     * Gets the attribute value for CURRENT_BAL using the alias name CurrentBal.
     * @return the CURRENT_BAL
     */
    public BigDecimal getCurrentBal() {
        return (BigDecimal) getAttributeInternal(CURRENTBAL);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENT_BAL using the alias name CurrentBal.
     * @param value value to set the CURRENT_BAL
     */
    public void setCurrentBal(BigDecimal value) {
        setAttributeInternal(CURRENTBAL, value);
    }

    /**
     * Gets the attribute value for CUSTOMER_NAME using the alias name CustomerName.
     * @return the CUSTOMER_NAME
     */
    public String getCustomerName() {
        return (String) getAttributeInternal(CUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for CUSTOMER_NAME using the alias name CustomerName.
     * @param value value to set the CUSTOMER_NAME
     */
    public void setCustomerName(String value) {
        setAttributeInternal(CUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for DELQNC_AMT using the alias name DelqncAmt.
     * @return the DELQNC_AMT
     */
    public BigDecimal getDelqncAmt() {
        return (BigDecimal) getAttributeInternal(DELQNCAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for DELQNC_AMT using the alias name DelqncAmt.
     * @param value value to set the DELQNC_AMT
     */
    public void setDelqncAmt(BigDecimal value) {
        setAttributeInternal(DELQNCAMT, value);
    }

    /**
     * Gets the attribute value for DELQNC_AVG using the alias name DelqncAvg.
     * @return the DELQNC_AVG
     */
    public BigDecimal getDelqncAvg() {
        return (BigDecimal) getAttributeInternal(DELQNCAVG);
    }

    /**
     * Sets <code>value</code> as attribute value for DELQNC_AVG using the alias name DelqncAvg.
     * @param value value to set the DELQNC_AVG
     */
    public void setDelqncAvg(BigDecimal value) {
        setAttributeInternal(DELQNCAVG, value);
    }

    /**
     * Gets the attribute value for DELQNC_CNT using the alias name DelqncCnt.
     * @return the DELQNC_CNT
     */
    public BigDecimal getDelqncCnt() {
        return (BigDecimal) getAttributeInternal(DELQNCCNT);
    }

    /**
     * Sets <code>value</code> as attribute value for DELQNC_CNT using the alias name DelqncCnt.
     * @param value value to set the DELQNC_CNT
     */
    public void setDelqncCnt(BigDecimal value) {
        setAttributeInternal(DELQNCCNT, value);
    }

    /**
     * Gets the attribute value for EMP_ID using the alias name EmpId.
     * @return the EMP_ID
     */
    public BigDecimal getEmpId() {
        return (BigDecimal) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_ID using the alias name EmpId.
     * @param value value to set the EMP_ID
     */
    public void setEmpId(BigDecimal value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for TOTAL_DUE using the alias name TotalDue.
     * @return the TOTAL_DUE
     */
    public BigDecimal getTotalDue() {
        return (BigDecimal) getAttributeInternal(TOTALDUE);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_DUE using the alias name TotalDue.
     * @param value value to set the TOTAL_DUE
     */
    public void setTotalDue(BigDecimal value) {
        setAttributeInternal(TOTALDUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpName.
     * @return the EmpName
     */
    public String getEmpName() {
        String empName="NA";
        String currencyCode="";
        Object empId = getAttributeInternal(EMPID);

        String query =
            "select hdr.emp_name ,hdr.curr_cd from APPS.SYN_CLOUD_DEL_ALL hdr, APPS.SYN_CLOUD_DEL_LINES_ALL lines \n" + 
            "where hdr.emp_id=lines.emp_id and hdr.emp_id="+empId;
       
        try {
            ResultSet resultSet;
            resultSet = getDBTransaction().createStatement(0).executeQuery(query);
            if (resultSet.next()) {
                empName = resultSet.getObject(1).toString();
                currencyCode = resultSet.getObject(2).toString();
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
       
        System.out.println("empname "+empName);
        System.out.println("CurrencyCode  "+currencyCode);
        
        String ret=empName+" :"+" Assigned Customers ("+currencyCode.toUpperCase()+")";
        
        
        return ret;
        
        
        
        
        //return (String) getAttributeInternal(EMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmpName.
     * @param value value to set the  EmpName
     */
    public void setEmpName(String value) {
        setAttributeInternal(EMPNAME, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EmpNameLOV1.
     */
    public RowSet getEmpNameLOV1() {
        return (RowSet) getAttributeInternal(EMPNAMELOV1);
    }
}

